{"name":"SkyData","tagline":"Un framework PHP orientado a objetos para: Angular + Twig + ElasticSearch ","body":"### Skydata es fácil ;)\r\nSkyData está diseñado pensando en desarrolladores que requieren productividad. El modelo es sencillo y completamente intuitivo. Se utiliza lo mejor de MVC, lo mejor de la orientación a servicios y lo mejor de un sistema gestionado por eventos.\r\nVeamos un servicio (`/SkyData/Core/Service/Controller/SkyDataServiceController`) de una clase cualquiera:\r\n\r\n```\r\nclass CochesServiceController extends /SkyData/Core/Service/Controller/SkyDataServiceController\r\n{\r\n\t\t\t...\r\n  /** \t\r\n   * @ajaxMethod \r\n   * @runOnLoad\r\n  **/ \t\r\n  public function GetModelos ()\r\n  {\r\n\t$result = array();\r\n\t$result[] = $this->NewDataRow ('Modelos', array ('id' => 1, 'descripcion' => 'Nissan'));\r\n\t$result[] = $this->NewDataRow ('Modelos', array ('id' => 2, 'descripcion' => 'Touran'));\r\n\t$result[] = $this->NewDataRow ('Modelos', array ('id' => 3, 'descripcion' => 'Audi'));\r\n\t$result[] = $this->NewDataRow ('Modelos', array ('id' => 4, 'descripcion' => 'Volkswagen'));\r\n\t\r\n\treturn $result;\r\n  }\r\n\t\t...\r\n}\r\n```\r\nEn este método se retorna una lista de coche. De especial atención es el método `NewDataRow` que permite crear un registro a partir del modelo de datos declarado en la configuración de la clase. Esta:\r\n`config.yaml`\r\n```\r\ndatamodel:\r\n  Modelos: [id, descripcion]\r\n```\r\n\r\nEl servicio se asocia a una página `/SkyData/Core/Page/SkyDataPage`, que para este caso tendrá un View que usa Twig (`\\SkyData\\Core\\View\\TwigView`). El codigo HTML de la página podría ser éste:\r\n```\r\n<select  id='modelos' name=\"modeloSelected\" ng-model=\"Modelos\" class=\"span6\">\r\n\t<option value=\"-1\" selected='selected'>-- Elija un modelo --</option>\r\n\t<option ng-repeat=\"modelo in Modelos\" value=\"[[modelo.id]]\">[[modelo.descripcion]]</option>\r\n</select>\r\n```\r\nAquí se ha de advertir el uso de las marcas Angular para indicar el modelo de datos y los campos conectados con el elemento select. El código de la página generado automáticamente ya incluye el controller y las llamadas correctas a los métodos creados en el servicio mediante `$http`.\r\n\r\nLa página se asocia al servicio incluye la siguiente cláusula en su configuración:\r\n`Page\\config.yaml`\r\n```\r\nservices:\r\n  use: [CochesService]\r\n```\r\n\r\nEl código que el programador ha de realizar es únicamente la lógica de negocio en el backend, a través de la clase del servicio, usando PHP y la plantilla de visualización de la página usando la clase de la página. Esta plantilla puede ser HTML limpio, Twig o PHP. El código del framework automáticamente creará los controllers y services de Angular para que todo se conecte perfectamente.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}